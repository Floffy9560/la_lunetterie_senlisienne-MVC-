1745997771
8a0c4faa9771445189035ca844487507-phpdoc%3Af172ce94dfe90cee52d80650130b312d-f5ec5fb20bd7bdab989af1f35b854182
s:19164:"O:33:"phpDocumentor\Reflection\Php\File":14:{s:39:" phpDocumentor\Reflection\Php\File name";s:9:"frams.php";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:0:{}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:0:{}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}s:40:" phpDocumentor\Reflection\Php\File enums";a:0:{}s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"f5ec5fb20bd7bdab989af1f35b854182";s:39:" phpDocumentor\Reflection\Php\File path";s:47:"la-lunetterie-Senlisienne - MVC/views/frams.php";s:41:" phpDocumentor\Reflection\Php\File source";s:13449:"<!DOCTYPE html>
<html lang="fr">

<head>
   <meta charset="UTF-8" />
   <meta name="viewport" content="width=device-width, initial-scale=1.0" />
   <meta name="description" content="Trouvez les lunettes parfaites parmi une large sélection de marques, formes et couleurs. Filtrez par genre, matière et bien plus encore !" />
   <meta name="keywords" content="lunettes, optique, lunettes de vue, lunettes de soleil, marques de lunettes, formes de lunettes, couleurs de lunettes, achat lunettes en ligne" />
   <title>Recherche lunettes</title>
   <link rel="preconnect" href="https://fonts.googleapis.com" />
   <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
   <link
      href="https://fonts.googleapis.com/css2?family=Dancing+Script:wght@400..700&family=Open+Sans:ital,wght@0,300..800;1,300..800&family=Source+Code+Pro:ital,wght@0,200..900;1,200..900&display=swap"
      rel="stylesheet" />
   <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
   <link rel="stylesheet" href="/assets/css/headerFooter.css" />
   <link rel="stylesheet" href="/assets/css/frams.css" />
</head>

<?php include 'templates/header.php' ?>

<body>
   <h1>Recherchez vos lunettes idéales</h1>
   <main>
      <button type="button" class="buttonFilter" id="buttonFilter">Afficher les filtres<i class="bi bi-filter-square-fill"></i></button>
      <div class="searchContainer">
         <div class="menuSearch" id="menuSearch">
            <div class="testinput">
               <div class="containerInputSearch">


                  <form action="" method="GET" class="formSearch">
                     <!-- <p>Marques :</p> -->
                     <h2>Filtrez par marque</h2>
                     <div class="containerCheckbox">
                        <span>
                           <input type="checkbox" id="brett" name="brands[]" value="brett" />
                           <label for="brett">Brett</label>
                        </span>
                        <span>
                           <input type="checkbox" id="minamoto" name="brands[]" value="minamoto" />
                           <label for="minamoto">Minamoto</label>
                        </span>
                        <span>
                           <input type="checkbox" id="cazal" name="brands[]" value="cazal" />
                           <label for="cazal">Cazal</label>
                        </span>
                        <span>
                           <input type="checkbox" id="bali" name="brands[]" value="bali" />
                           <label for="bali">Bali</label>
                        </span>
                        <span>
                           <input type="checkbox" id="aponem" name="brands[]" value="aponem" />
                           <label for="aponem">Aponem</label>
                        </span>
                        <!-- <span>
                           <input type="checkbox" id="woodys" name="brands[]" value="woodys" />
                           <label for="woodys">Woodys</label>
                        </span>
                        <span>
                           <input type="checkbox" id="la-brique-et-la-violette" name="brands[]" value="la brique et la violette" />
                           <label for="la-brique-et-la-violette">La brique et la violette</label>
                        </span>
                        <span>
                           <input type="checkbox" id="andy-brook" name="brands[]" value="andy-brook" />
                           <label for="andy-brook">Andy brook</label>
                        </span>
                        <span>
                           <input type="checkbox" id="clemence-et-margaux" name="brands[]" value="clemence-et-margaux" />
                           <label for="clemence-et-margaux">Clémence et margaux</label>
                        </span>
                        <span>
                           <input type="checkbox" id="paprika" name="brands[]" value="paprika" />
                           <label for="paprika">Paprika</label>
                        </span>
                        <span>
                           <input type="checkbox" id="malt" name="brands[]" value="malt" />
                           <label for="malt">Malt</label>
                        </span>
                        <span>
                           <input type="checkbox" id="sunday-somewhere" name="brands[]" value="sunday-somewhere" />
                           <label for="sunday-somewhere">Sunday somewhere</label>
                        </span>
                        <span>
                           <input type="checkbox" id="demetz" name="brands[]" value="demetz" />
                           <label for="demetz">Demetz</label>
                        </span>
                        <span>
                           <input type="checkbox" id="friendly-frenchy" name="brands[]" value="friendly-frenchy" />
                           <label for="friendly-frenchy">Friendly frenchy</label>
                        </span> -->
                     </div>
                     <div>
                        <button type="submit" class="buttonSearch" id="buttonSearch">Filtrer par marque </button>
                     </div>
                  </form>
               </div>

               <div class="containerInputSearch">

                  <form action="" method="GET" class="formSearch">
                     <!-- <p>Genres :</p> -->
                     <h2>Choisissez votre genre</h2>
                     <div class="containerCheckbox">
                        <span>
                           <input type="checkbox" id="men" name="genders[]" value="homme" />
                           <label for="men">Homme</label>
                        </span>
                        <span>
                           <input type="checkbox" id="femme" name="genders[]" value="femme" />
                           <label for="femme">Femme</label>
                        </span>
                        <span>
                           <input type="checkbox" id="enfant" name="genders[]" value="enfant" />
                           <label for="enfant">Enfant</label>
                        </span>
                        <span>
                           <input type="checkbox" id="mixteGender" name="genders[]" value="mixte" />
                           <label for="mixteGender">Mixte</label>
                        </span>
                     </div>
                     <div>
                        <button type="submit" class="buttonSearch"> Filtrer par genre</button>
                     </div>
                  </form>
               </div>



               <div class="containerInputSearch">

                  <form action="" method="GET" class="formSearch">
                     <!-- <p>Formes :</p> -->
                     <h2>Sélectionnez une forme</h2>
                     <div class="containerCheckbox">
                        <span>
                           <input type="checkbox" id="carrée" name="shapes[]" value="carrée" />
                           <label for="carrée">Carrée</label>
                        </span>
                        <span>
                           <input type="checkbox" id="ronde" name="shapes[]" value="ronde" />
                           <label for="ronde">Ronde</label>
                        </span>
                        <span>
                           <input type="checkbox" id="pantos" name="shapes[]" value="pantos" />
                           <label for="pantos">Pantos</label>
                        </span>
                        <span>
                           <input type="checkbox" id="originale" name="shapes[]" value="originale" />
                           <label for="original">Originale</label>
                        </span>
                        <span>
                           <input type="checkbox" id="hexagonale" name="shapes[]" value="hexagonale" />
                           <label for="hexagonale">Hexagonale</label>
                        </span>
                        <span>
                           <input type="checkbox" id="papillon" name="shapes[]" value="papillon" />
                           <label for="papillon">Papillon</label>
                        </span>
                        <span>
                           <input type="checkbox" id="octogonale" name="shapes[]" value="octogonale" />
                           <label for="octogonale">Octogonale</label>
                        </span>
                     </div>
                     <div>
                        <button type="submit" class="buttonSearch"> Filtrer par formes</button>
                     </div>
                  </form>
               </div>



               <div class="containerInputSearch">

                  <form action="" method="GET" class="formSearch">
                     <!-- <p>Couleurs :</p> -->
                     <h2>Optez pour une couleur</h2>
                     <div class="containerCheckbox">
                        <span>
                           <input type="checkbox" id="noir" name="colors[]" value="noir" />
                           <label for="noir">Noir</label>
                        </span>
                        <span>
                           <input type="checkbox" id="rouge" name="colors[]" value="rouge" />
                           <label for="rouge">Rouge</label>
                        </span>
                        <span>
                           <input type="checkbox" id="ecaille" name="colors[]" value="ecaille" />
                           <label for="ecaille">Ecaille</label>
                        </span>
                        <span>
                           <input type="checkbox" id="marron" name="colors[]" value="marron" />
                           <label for="marron">Marron</label>
                        </span>
                        <span>
                           <input type="checkbox" id="bleu" name="colors[]" value="bleu" />
                           <label for="bleu">Bleu</label>
                        </span>
                        <span>
                           <input type="checkbox" id="or" name="colors[]" value="or" />
                           <label for="or">Or</label>
                        </span>
                        <span>
                           <input type="checkbox" id="rose" name="colors[]" value="rose" />
                           <label for="rose">Rose</label>
                        </span>
                        <span>
                           <input type="checkbox" id="gris" name="colors[]" value="gris" />
                           <label for="gris">Gris</label>
                        </span>
                        <span>
                           <input type="checkbox" id="vert" name="colors[]" value="vert" />
                           <label for="vert">Vert</label>
                        </span>
                     </div>
                     <div>
                        <button type="submit" class="buttonSearch">Filtrer par couleurs</button>
                     </div>
                  </form>
               </div>



               <div class="containerInputSearch">

                  <form action="" method="GET" class="formSearch">
                     <!-- <p>Matières :</p> -->
                     <h2>Préférez une matière</h2>
                     <div class="containerCheckbox">
                        <span>
                           <input type="checkbox" id="titane" name="matters[]" value="titane" />
                           <label for="titane">Titane</label>
                        </span>
                        <span>
                           <input type="checkbox" id="acetate" name="matters[]" value="acetate" />
                           <label for="acetate">Acetate</label>
                        </span>
                        <span>
                           <input type="checkbox" id="acier" name="matters[]" value="acier" />
                           <label for="acier">Acier</label>
                        </span>
                        <span>
                           <input type="checkbox" id="metal" name="matters[]" value="metal" />
                           <label for="metal">Métal</label>
                        </span>
                     </div>
                     <div>
                        <button type="submit" class="buttonSearch">Filtrer par matières</button>
                     </div>
                  </form>
               </div>
            </div>
            <div class="test">
               <form action="" method="GET" class="formSearch">

                  <button class="buttonReset">Réinitialiser</button>
               </form>
            </div>
         </div>
      </div>
      <div class="overlay" id="overlay"></div>


      <div class="containerCards">
         <?php displayCards();   ?>
      </div>


   </main>
   <script src="/assets/JS/frams.js" defer></script>


</body>

<?php include 'templates/footer.php' ?>

</html>";s:43:" phpDocumentor\Reflection\Php\File docBlock";N;s:43:" phpDocumentor\Reflection\Php\File metadata";a:0:{}}";