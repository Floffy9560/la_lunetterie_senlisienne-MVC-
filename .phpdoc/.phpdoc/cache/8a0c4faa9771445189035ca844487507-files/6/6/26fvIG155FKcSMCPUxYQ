1745999999
8a0c4faa9771445189035ca844487507-phpdoc%3Abe84db2bb78af90cd56b850ac4c5aede-d746bf960671004f1c7e945fd13c1b8f
s:7936:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxNDp7czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBuYW1lIjtzOjE5OiJtZW50aW9uc0xlZ2FsZXMucGhwIjtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWVzcGFjZXMiO2E6MDp7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW5jbHVkZXMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAZnVuY3Rpb25zIjthOjA6e31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNvbnN0YW50cyI7YTowOnt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBjbGFzc2VzIjthOjA6e31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGludGVyZmFjZXMiO2E6MDp7fXM6NDE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAdHJhaXRzIjthOjA6e31zOjQwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGVudW1zIjthOjA6e31zOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6ImQ3NDZiZjk2MDY3MTAwNGYxYzdlOTQ1ZmQxM2MxYjhmIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHBhdGgiO3M6MjU6InZpZXdzL21lbnRpb25zTGVnYWxlcy5waHAiO3M6NDE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAc291cmNlIjtzOjUwMzg6IjwhRE9DVFlQRSBodG1sPg0KPGh0bWwgbGFuZz0iZnIiPg0KDQo8aGVhZD4NCiAgICA8bWV0YSBjaGFyc2V0PSJVVEYtOCIgLz4NCiAgICA8bWV0YSBuYW1lPSJ2aWV3cG9ydCIgY29udGVudD0id2lkdGg9ZGV2aWNlLXdpZHRoLCBpbml0aWFsLXNjYWxlPTEuMCIgLz4NCiAgICA8dGl0bGU+TWVudGlvbnMgbGVnYWxlczwvdGl0bGU+DQogICAgPGxpbmsgcmVsPSJwcmVjb25uZWN0IiBocmVmPSJodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tIiAvPg0KICAgIDxsaW5rIHJlbD0icHJlY29ubmVjdCIgaHJlZj0iaHR0cHM6Ly9mb250cy5nc3RhdGljLmNvbSIgY3Jvc3NvcmlnaW4gLz4NCiAgICA8bGluaw0KICAgICAgICBocmVmPSJodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2NzczI/ZmFtaWx5PURhbmNpbmcrU2NyaXB0OndnaHRANDAwLi43MDAmZmFtaWx5PU9wZW4rU2FuczppdGFsLHdnaHRAMCwzMDAuLjgwMDsxLDMwMC4uODAwJmZhbWlseT1Tb3VyY2UrQ29kZStQcm86aXRhbCx3Z2h0QDAsMjAwLi45MDA7MSwyMDAuLjkwMCZkaXNwbGF5PXN3YXAiDQogICAgICAgIHJlbD0ic3R5bGVzaGVldCIgLz4NCiAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Imh0dHBzOi8vY2RuLmpzZGVsaXZyLm5ldC9ucG0vYm9vdHN0cmFwLWljb25zQDEuMTEuMy9mb250L2Jvb3RzdHJhcC1pY29ucy5taW4uY3NzIj4NCiAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Ii9hc3NldHMvY3NzL2hlYWRlckZvb3Rlci5jc3MiIC8+DQogICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSIvYXNzZXRzL2Nzcy9tZW50aW9uc0xlZ2FsZXMuY3NzIiAvPg0KPC9oZWFkPg0KDQoNCjxib2R5Pg0KICAgIDw/cGhwIGluY2x1ZGUgJ3RlbXBsYXRlcy9oZWFkZXIucGhwJyA/Pg0KICAgIDxtYWluPg0KICAgICAgICA8ZGl2IGNsYXNzPSJtYWluLWNvbnRlbmFpciI+DQogICAgICAgICAgICA8aDE+TWVudGlvbnMgTMOpZ2FsZXM8L2gxPg0KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29udGFpbmVyIj4NCg0KICAgICAgICAgICAgICAgIDxoMj5JZGVudGlmaWNhdGlvbiBkZSBs4oCZw4lkaXRldXIgZHUgU2l0ZSA6PC9oMj4NCiAgICAgICAgICAgICAgICA8cD5Ob20gZGUgbOKAmWVudHJlcHJpc2UgOiBbTm9tIGRlIHZvdHJlIG1hZ2FzaW4gZOKAmW9wdGlxdWVdPC9wPg0KICAgICAgICAgICAgICAgIDxwPiBGb3JtZSBqdXJpZGlxdWUgOiBbRXhlbXBsZSA6IFNvY2nDqXTDqSDDoCBSZXNwb25zYWJpbGl0w6kgTGltaXTDqWUgKFNBUkwpXTwvcD4NCiAgICAgICAgICAgICAgICA8cD5DYXBpdGFsIHNvY2lhbCA6IFtNb250YW50IGR1IGNhcGl0YWwgc29jaWFsPC9wPg0KICAgICAgICAgICAgICAgIDxwPiBBZHJlc3NlIDogW0FkcmVzc2UgY29tcGzDqHRlIGR1IG1hZ2FzaW48L3A+DQogICAgICAgICAgICAgICAgPHA+IFTDqWzDqXBob25lIDogW051bcOpcm8gZGUgdMOpbMOpcGhvbmU8L3A+DQogICAgICAgICAgICAgICAgPHA+IEFkcmVzc2UgZS1tYWlsIDogW0FkcmVzc2UgZS1tYWlsIG9mZmljaWVsbGU8L3A+DQogICAgICAgICAgICAgICAgPHA+IE51bcOpcm8gU0lSRVQgOiBbTnVtw6lybyBk4oCZaWRlbnRpZmljYXRpb24gU0lSRVQ8L3A+DQogICAgICAgICAgICAgICAgPHA+IE51bcOpcm8gUkNTIDogW051bcOpcm8gZOKAmWltbWF0cmljdWxhdGlvbiBhdSBSZWdpc3RyZSBkdSBDb21tZXJjZSBldCBkZXMgU29jacOpdMOpczwvcD4NCiAgICAgICAgICAgICAgICA8cD4gTnVtw6lybyBUVkEgaW50cmFjb21tdW5hdXRhaXJlIDogW0ZSWFhYWFhYWFhYWDwvcD4NCiAgICAgICAgICAgICAgICA8cD4gRGlyZWN0ZXVyIGRlIHB1YmxpY2F0aW9uIDogW05vbSBldCBwcsOpbm9tPC9wPg0KICAgICAgICAgICAgICAgIDxwPiBSZXNwb25zYWJsZSBkZSBsYSByw6lkYWN0aW9uIDogW05vbSBldCBwcsOpbm9tXTwvcD4NCiAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb250YWluZXIiPg0KICAgICAgICAgICAgICAgIDxoMj5Iw6liZXJnZXVyIGR1IFNpdGUgOjwvaDI+DQogICAgICAgICAgICAgICAgPHA+IE5vbSBkZSBs4oCZaMOpYmVyZ2V1ciA6IFtOb20gZGUgbOKAmWVudHJlcHJpc2UgZOKAmWjDqWJlcmdlbWVudF08L3A+DQogICAgICAgICAgICAgICAgPHA+QWRyZXNzZSA6IFtBZHJlc3NlIGNvbXBsw6h0ZSBkZSBs4oCZaMOpYmVyZ2V1cl08L3A+DQogICAgICAgICAgICAgICAgPHA+IFTDqWzDqXBob25lIDogW051bcOpcm8gZGUgdMOpbMOpcGhvbmUgZGUgbOKAmWjDqWJlcmdldXJdPC9wPg0KICAgICAgICAgICAgICAgIDxwPiBTaXRlIGludGVybmV0IDogW0xpZW4gdmVycyBsZSBzaXRlIGRlIGzigJlow6liZXJnZXVyXTwvcD4NCiAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb250YWluZXIiPg0KICAgICAgICAgICAgICAgIDxoMj5Qcm9wcmnDqXTDqSBJbnRlbGxlY3R1ZWxsZSA6PC9oMj4NCiAgICAgICAgICAgICAgICA8cD5Ub3V0IGxlIGNvbnRlbnUgZHUgc2l0ZSBpbnRlcm5ldCwgaW5jbHVhbnQsIHNhbnMgbGltaXRhdGlvbiwgbGVzIHRleHRlcywgaW1hZ2VzLCBncmFwaGlzbWVzLA0KICAgICAgICAgICAgICAgICAgICBsb2dvcywgdmlkw6lvcywgaWPDtG5lcywgc29ucywgZXN0IGxhIHByb3ByacOpdMOpIGV4Y2x1c2l2ZSBkZSBbTm9tIGRlIHZvdHJlIG1hZ2FzaW4gZOKAmW9wdGlxdWVdIG91IGRlIHNlcyBwYXJ0ZW5haXJlcy4NCiAgICAgICAgICAgICAgICAgICAgVG91dGUgcmVwcm9kdWN0aW9uLCByZXByw6lzZW50YXRpb24sIG1vZGlmaWNhdGlvbiwgcHVibGljYXRpb24sIGFkYXB0YXRpb24gdG90YWxlIG91IHBhcnRpZWxsZSBkZXMgw6lsw6ltZW50cyBkdSBzaXRlIGVzdA0KICAgICAgICAgICAgICAgICAgICBpbnRlcmRpdGUsIHNhdWYgYXV0b3Jpc2F0aW9uIMOpY3JpdGUgcHLDqWFsYWJsZS48L3A+DQogICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29udGFpbmVyIj4NCiAgICAgICAgICAgICAgICA8aDI+UHJvdGVjdGlvbiBkZXMgRG9ubsOpZXMgUGVyc29ubmVsbGVzIDo8L2gyPg0KICAgICAgICAgICAgICAgIDxwPkNvbmZvcm3DqW1lbnQgw6AgbGEgbG9pIG7CsCA3OC0xNyBkdSA2IGphbnZpZXIgMTk3OCBtb2RpZmnDqWUsIHJlbGF0aXZlIMOgIGzigJlpbmZvcm1hdGlxdWUsDQogICAgICAgICAgICAgICAgICAgIGF1eCBmaWNoaWVycyBldCBhdXggbGliZXJ0w6lzLCBhaW5zaSBxdeKAmWF1IFLDqGdsZW1lbnQgR8OpbsOpcmFsIHN1ciBsYSBQcm90ZWN0aW9uIGRlcyBEb25uw6llcyAoUkdQRCkgOjwvcD4NCg0KICAgICAgICAgICAgICAgIDxwPiBMZXMgZG9ubsOpZXMgcGVyc29ubmVsbGVzIGNvbGxlY3TDqWVzIHZpYSBsZSBzaXRlIHNvbnQgdXRpbGlzw6llcyB1bmlxdWVtZW50IHBvdXIgbGVzIGZpbmFsaXTDqXMgcHLDqXZ1ZXMNCiAgICAgICAgICAgICAgICAgICAgKGdlc3Rpb24gZGVzIGNvbW1hbmRlcywgY29udGFjdCwgZXRjLikuPC9wPg0KICAgICAgICAgICAgICAgIDxwPiBWb3VzIGRpc3Bvc2V6IGTigJl1biBkcm9pdCBk4oCZYWNjw6hzLCBkZSByZWN0aWZpY2F0aW9uLCBkZSBzdXBwcmVzc2lvbiBldCBk4oCZb3Bwb3NpdGlvbiBjb25jZXJuYW50IHZvcyBkb25uw6llcyBwZXJzb25uZWxsZXMuPC9wPg0KICAgICAgICAgICAgICAgIDxwPiBQb3VyIGV4ZXJjZXIgY2VzIGRyb2l0cywgY29udGFjdGV6LW5vdXMgw6AgbOKAmWFkcmVzc2Ugc3VpdmFudGUgOiBbQWRyZXNzZSBlLW1haWwgZMOpZGnDqWUgYXUgdHJhaXRlbWVudCBkZXMgZG9ubsOpZXMNCiAgICAgICAgICAgICAgICAgICAgcGVyc29ubmVsbGVzXS48L3A+DQogICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29udGFpbmVyIj4NCiAgICAgICAgICAgICAgICA8aDI+Q29va2llcyA6PC9oMj4NCiAgICAgICAgICAgICAgICA8cD5MZSBzaXRlIHV0aWxpc2UgZGVzIGNvb2tpZXMgcG91ciBhbcOpbGlvcmVyIHZvdHJlIGV4cMOpcmllbmNlIGRlIG5hdmlnYXRpb24uIFZvdXMgcG91dmV6IGfDqXJlciB2b3MgcHLDqWbDqXJlbmNlcyBlbiBtYXRpw6hyZQ0KICAgICAgICAgICAgICAgICAgICBkZSBjb29raWVzIHZpYSBsZXMgcGFyYW3DqHRyZXMgZGUgdm90cmUgbmF2aWdhdGV1ciBvdSB2aWEgbGUgYmFuZGVhdSBkZSBjb25zZW50ZW1lbnQgYWZmaWNow6kgc3VyIGxlIHNpdGUuPC9wPg0KICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbnRhaW5lciI+DQogICAgICAgICAgICAgICAgPGgyPlJlc3BvbnNhYmlsaXTDqSA6PC9oMj4NCiAgICAgICAgICAgICAgICA8cD5bTm9tIGRlIHZvdHJlIG1hZ2FzaW4gZOKAmW9wdGlxdWVdIG5lIHBldXQgw6p0cmUgdGVudSByZXNwb25zYWJsZSBkZXMgZG9tbWFnZXMgZGlyZWN0cyBvdSBpbmRpcmVjdHMgY2F1c8OpcyBhdSBtYXTDqXJpZWwgZGUNCiAgICAgICAgICAgICAgICAgICAgbOKAmXV0aWxpc2F0ZXVyIGxvcnMgZGUgbOKAmWFjY8OocyBhdSBzaXRlLCBub3RhbW1lbnQgZW4gY2FzIGRlIGzigJlhcHBhcml0aW9uIGRlIGJ1Z3Mgb3UgZOKAmWluY29tcGF0aWJpbGl0w6lzLjwvcD4NCiAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb250YWluZXIiPg0KICAgICAgICAgICAgICAgIDxoMj5Ecm9pdCBBcHBsaWNhYmxlIGV0IExpdGlnZXMgOjwvaDI+DQogICAgICAgICAgICAgICAgPHA+TGVzIHByw6lzZW50ZXMgbWVudGlvbnMgbMOpZ2FsZXMgc29udCByw6lnaWVzIHBhciBsZSBkcm9pdCBmcmFuw6dhaXMuIFRvdXQgbGl0aWdlIHNlcmEgc291bWlzIMOgIGxhIGNvbXDDqXRlbmNlIGV4Y2x1c2l2ZSBkZXMNCiAgICAgICAgICAgICAgICAgICAgdHJpYnVuYXV4IGZyYW7Dp2FpcyBjb21ww6l0ZW50cy48L3A+DQoNCiAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICA8L2Rpdj4NCiAgICA8L21haW4+DQogICAgPD9waHAgaW5jbHVkZSAndGVtcGxhdGVzL2Zvb3Rlci5waHAnID8+DQo8L2JvZHk+DQoNCjwvaHRtbD4iO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAZG9jQmxvY2siO047czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBtZXRhZGF0YSI7YTowOnt9fQ==";