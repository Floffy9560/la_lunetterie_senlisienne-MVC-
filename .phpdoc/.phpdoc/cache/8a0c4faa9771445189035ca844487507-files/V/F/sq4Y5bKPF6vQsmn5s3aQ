1745999999
8a0c4faa9771445189035ca844487507-phpdoc%3Af596dff80fc1f22b57b71cc34c444bfb-e7a1c3f5224c952103264b23c9676689
s:17968:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxNDp7czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBuYW1lIjtzOjIyOiJhY2NvdW50X2NvbnRyb2xsZXIucGhwIjtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWVzcGFjZXMiO2E6MDp7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW5jbHVkZXMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAZnVuY3Rpb25zIjthOjE6e3M6MTU6Ilxham91dEx1bmV0dGUoKSI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGdW5jdGlvbl8iOjk6e3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZ1bmN0aW9uXwBhcmd1bWVudHMiO2E6MDp7fXM6NDg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZ1bmN0aW9uXwBsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MTYwO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZ1bmN0aW9uXwBlbmRMb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6Mjc0O3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZ1bmN0aW9uXwByZXR1cm5UeXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTWl4ZWRfIjowOnt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRnVuY3Rpb25fAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6MTU6Ilxham91dEx1bmV0dGUoKSI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjEyOiJham91dEx1bmV0dGUiO31zOjQ4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGdW5jdGlvbl8AZG9jQmxvY2siO047czo2MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRnVuY3Rpb25fAGhhc1JldHVybkJ5UmVmZXJlbmNlIjtiOjA7czo0ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRnVuY3Rpb25fAG1ldGFkYXRhIjthOjA6e31zOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGdW5jdGlvbl8AYXR0cmlidXRlcyI7YTowOnt9fX1zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNvbnN0YW50cyI7YTowOnt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBjbGFzc2VzIjthOjA6e31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGludGVyZmFjZXMiO2E6MDp7fXM6NDE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAdHJhaXRzIjthOjA6e31zOjQwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGVudW1zIjthOjA6e31zOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6ImU3YTFjM2Y1MjI0Yzk1MjEwMzI2NGIyM2M5Njc2Njg5IjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHBhdGgiO3M6MzQ6ImNvbnRyb2xsZXJzL2FjY291bnRfY29udHJvbGxlci5waHAiO3M6NDE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAc291cmNlIjtzOjExMzgyOiI8P3BocA0KDQpyZXF1aXJlX29uY2UgX19ESVJfXyAuICcvLi4vbW9kZWxzL2ZvbmN0aW9uc19mb3JtdWxhaXJlLnBocCc7DQovLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8NCi8vLy8vLy8vLy8vLy8gICAgZm9uY3Rpb25zIHBvdXIgYWNjb3VudC5waHAgICAgLy8vLy8vLy8vLy8vLy8vLy8vLw0KLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vDQoNCg0KDQppZiAoIWVtcHR5KCRfUE9TVFsnZW1haWwnXSkgJiYgIWVtcHR5KCRfUE9TVFsncGFzc3dvcmQnXSkpIHsNCg0KICAgICAgLy8gUsOpY3Vww6lyYXRpb24gZGVzIGRvbm7DqWVzIGR1IGZvcm11bGFpcmUNCiAgICAgICRkYXlfb2ZfYmlydGggPSAkX1BPU1RbJ2RheXMnXTsNCiAgICAgICRtb250aF9vZl9iaXJ0aCA9ICRfUE9TVFsnbW9udGgnXTsNCiAgICAgICR5ZWFyX29mX2JpcnRoID0gJF9QT1NUWyd5ZWFyJ107DQogICAgICAkcGFzc3dvcmQgID0gJF9QT1NUWydwYXNzd29yZCddOw0KICAgICAgJGxhc3RuYW1lID0gJF9QT1NUWydsYXN0bmFtZSddOw0KICAgICAgJGZpcnN0bmFtZSA9ICRfUE9TVFsnZmlyc3RuYW1lJ107DQogICAgICAkbWFpbCA9ICRfUE9TVFsnZW1haWwnXTsNCiAgICAgICRwaG9uZSA9ICRfUE9TVFsndGVsJ107DQogICAgICAkYWRkcmVzcyA9ICRfUE9TVFsncG9zdGFsX2FkcmVzcyddOw0KICAgICAgJGlkX3JvbGUgPSAyOw0KDQogICAgICAvLyBOZXR0b3lhZ2UgZGVzIGRvbm7DqWVzDQogICAgICAkY2xlYW5lZFBhc3N3b3JkID0gY2xlYW5QYXNzd29yZCgkcGFzc3dvcmQpOw0KICAgICAgJGNsZWFuZWRFbWFpbCA9IG5ldHRveWVyRW1haWwoJG1haWwpOw0KICAgICAgJGNsZWFuZWRBZGRyZXNzID0gbmV0dG95ZXJBZHJlc3NlKCRhZGRyZXNzKTsNCiAgICAgICRjbGVhbmVkTGFzdG5hbWUgPSBjbGVhbigkbGFzdG5hbWUpOw0KICAgICAgJGNsZWFuZWRGaXJzdG5hbWUgPSBjbGVhbigkZmlyc3RuYW1lKTsNCiAgICAgICRjbGVhbmVkUGhvbmUgPSBjbGVhblBob25lKCRwaG9uZSk7DQoNCiAgICAgICRpZF91c2VyX2luZm9zID0gY3JlYXRlVXNlckluZm9zKCRjbGVhbmVkRW1haWwsICRjbGVhbmVkUGhvbmUsICRjbGVhbmVkTGFzdG5hbWUsICRjbGVhbmVkRmlyc3RuYW1lLCAkY2xlYW5lZEFkZHJlc3MpOw0KICAgICAgLy8gVsOpcmlmaWNhdGlvbiBzaSBsJ0lEIGQndXRpbGlzYXRldXIgaW5mb3MgZXN0IHZhbGlkZSBhdmFudCBkZSBjcsOpZXIgbCd1dGlsaXNhdGV1cg0KICAgICAgaWYgKCRpZF91c2VyX2luZm9zKSB7DQoNCiAgICAgICAgICAgIC8vIENyw6lhdGlvbiBkZSBsJ3V0aWxpc2F0ZXVyIGF2ZWMgbGVzIGluZm9ybWF0aW9ucyBwcsOpY8OpZGVtbWVudCBjcsOpw6llcw0KICAgICAgICAgICAgJGlkID0gY3JlYXRlVXNlcigkZGF5X29mX2JpcnRoLCAkbW9udGhfb2ZfYmlydGgsICR5ZWFyX29mX2JpcnRoLCAkY2xlYW5lZFBhc3N3b3JkLCAkaWRfdXNlcl9pbmZvcywgJGlkX3JvbGUpOw0KICAgICAgICAgICAgZWNobyAkaWQ7DQogICAgICAgICAgICAvLyBWw6lyaWZpY2F0aW9uIHNpIGwnSUQgZGUgbCd1dGlsaXNhdGV1ciBhIMOpdMOpIHJldG91cm7DqQ0KICAgICAgICAgICAgaWYgKCRpZCkgew0KICAgICAgICAgICAgICAgICAgLy8gUsOpY3Vww6lyYXRpb24gZGVzIGluZm9ybWF0aW9ucyBkZSBsJ3V0aWxpc2F0ZXVyIHBhciBzb24gSUQNCiAgICAgICAgICAgICAgICAgICR1c2VyID0gZ2V0VXNlckJ5SWQoJGlkKTsNCg0KICAgICAgICAgICAgICAgICAgaWYgKCR1c2VyKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAkX1NFU1NJT05bJ3VzZXJJbmZvcyddID0gJHVzZXI7DQogICAgICAgICAgICAgICAgICAgICAgICBoZWFkZXIoJ2xvY2F0aW9uOiBhY2NvdW50Jyk7DQogICAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICAgICAgJF9TRVNTSU9OWydlcnJvciddID0gIuKaoO+4jyBBdWN1bmUgZG9ubsOpZSB0cm91dsOpZSBwb3VyIGNldCB1dGlsaXNhdGV1ci4iOw0KICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KICAgICAgfQ0KfSBlbHNlaWYgKCFlbXB0eSgkX1BPU1RbJ2N1c3RvbWVyTWFpbCddKSAmJiAhZW1wdHkoJF9QT1NUWydwYXNzd29yZEN1c3RvbWVyJ10pKSB7DQoNCiAgICAgIGlmICghZW1wdHkoJF9TRVNTSU9OWydzdWNjZXNzX21lc3NhZ2UnXSkpIHsNCiAgICAgICAgICAgIHVuc2V0KCRfU0VTU0lPTlsnc3VjY2Vzc19tZXNzYWdlJ10pOw0KICAgICAgfQ0KDQogICAgICAkcGFzc3dvcmQgPSAkX1BPU1RbJ3Bhc3N3b3JkQ3VzdG9tZXInXTsNCiAgICAgICRtYWlsID0gJF9QT1NUWydjdXN0b21lck1haWwnXTsNCg0KICAgICAgaWYgKHZlcmlmaWNhdGlvbigkbWFpbCwgJHBhc3N3b3JkKSA9PT0gdHJ1ZSkgew0KICAgICAgICAgICAgLy8gUsOpY3Vww6lyYXRpb24gZGUgdG91dGVzIGxlcyBpbmZvcm1hdGlvbnMgdXRpbGlzYXRldXIgdmlhIGxlIG1haWwgIDoNCiAgICAgICAgICAgICRfU0VTU0lPTlsndXNlckluZm9zJ10gPSBnZXRVc2VySW5mb3MoJG1haWwpOw0KICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgIGVjaG8gIjxwPiBUT04gUEFTU1dPUkQgTidFU1QgUEFTIEJPTjwvcD4iOw0KICAgICAgfQ0KfQ0KDQoNCg0KLy8gRW52b2kgZGUgbWFpbCBhZmluIGRlIGNoYW5nZXIgbGUgbWRwKCBkYW5zIG5vdHJlIGNhcyByZWRpcmVjdGlvbiB2ZXJzIGxhIHBhZ2UgcG91ciBjaGFuZ2VyIGxlIG1kcCkNCmlmICghZW1wdHkoJF9QT1NUWydwYXNzd29yZExvc3QnXSkpIHsNCiAgICAgIGhlYWRlcignbG9jYXRpb246cmVzZXRfcGFzc3dvcmQnKTsNCn0NCg0KLy8gU2UgZMOpY29ubmVjdGVyDQppZiAoIWVtcHR5KCRfUE9TVFsnZGVjb25uZXhpb24nXSkpIHsNCiAgICAgIHNlc3Npb25fdW5zZXQoKTsNCiAgICAgIHNlc3Npb25fZGVzdHJveSgpOw0KICAgICAgaGVhZGVyKCdsb2NhdGlvbjogLycpOw0KfQ0KDQovLyBTdXBwcmltZXIgbGUgY29tcHRlDQppZiAoIWVtcHR5KCRfUE9TVFsnc3VwcHJpbWVyJ10pKSB7DQogICAgICAkaWRVc2VyID0gJF9TRVNTSU9OWyd1c2VySW5mb3MnXVsnaWRfdXNlcnMnXTsNCiAgICAgIGRlbGV0ZVVzZXIoJGlkVXNlcik7DQogICAgICBzZXNzaW9uX3Vuc2V0KCk7DQogICAgICBzZXNzaW9uX2Rlc3Ryb3koKTsNCiAgICAgIGhlYWRlcignbG9jYXRpb246IC8nKTsNCn0NCg0KDQovLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8NCi8vLy8vLy8vLy8vLy8gICAgU1VQUFJJTUVSIFVOIFJSRU5ERVogVk9VUyAgICAvLy8vLy8vLy8vLy8vLy8vLy8vDQovLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vDQoNCmlmICghZW1wdHkoJF9HRVRbJ2RhdGVSRFYnXSkgJiYgIWVtcHR5KCRfR0VUWyd0aW1lUkRWJ10pKSB7DQoNCiAgICAgICRhcHBvaW50bWVudERhdGVTdHIgPSAkX0dFVFsnZGF0ZVJEViddOw0KICAgICAgJGFwcG9pbnRtZW50VGltZSA9ICRfR0VUWyd0aW1lUkRWJ107DQogICAgICBkZWxldGVBcHBvaW50bWVudCgkYXBwb2ludG1lbnREYXRlU3RyLCAkYXBwb2ludG1lbnRUaW1lKTsNCn0NCg0KLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vDQovLy8vLy8vLy8vLy8vICAgIFbDqXJpZmnDqSBzaSBsJ3V0aWxpc2F0ZXVyIGVzdCBkw6lqw6AgY29ubmVjdMOpIHNpIG91aSAocXVlIHLDtGxlIMOgIHQnaWwpIGV0IGxlIGRpcmlnw6kgdmVycyBsYSBwYWdlIGRlIHNvbiBjb21wdGUgc2lub24gbGUgZGlyaWfDqSBzdXIgaW5zY3JpcHRpb24gICAvLy8vLy8vLy8vLy8vLy8vLy8vDQovLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vDQoNCmlmICghZW1wdHkoJF9TRVNTSU9OWyd1c2VySW5mb3MnXSkpIHsNCiAgICAgIGlmICgkX1NFU1NJT05bJ3VzZXJJbmZvcyddWydpZF9yb2xlJ10gPT0gMikgew0KDQogICAgICAgICAgICAvLyBTaSBsJ3V0aWxpc2F0ZXVyIGVzdCBjb25uZWN0w6ksIHJlZGlyaWdlciB2ZXJzIGxhIHBhZ2UgZGUgY29tcHRlDQogICAgICAgICAgICBpbmNsdWRlIF9fRElSX18gLiAnLy4uL3ZpZXdzL2FjY291bnQucGhwJzsNCiAgICAgICAgICAgIGV4aXQoKTsNCiAgICAgIH0gZWxzZSB7DQoNCiAgICAgICAgICAgIC8vIFNpIGwnYWRtaW4gZXN0IGNvbm5lY3TDqSwgcmVkaXJpZ2VyIHZlcnMgbGEgcGFnZSBkZSBjb21wdGUgYWRtaW4NCiAgICAgICAgICAgIHJlcXVpcmVfb25jZSBfX0RJUl9fIC4gJy8uLi9tb2RlbHMvZm9uY3Rpb25zX2Zhcm1zLnBocCc7DQogICAgICAgICAgICBpbmNsdWRlIF9fRElSX18gLiAnLy4uL3ZpZXdzL2FjY291bnRBRE1JTi5waHAnOw0KDQogICAgICAgICAgICBleGl0KCk7DQogICAgICB9DQp9IGVsc2Ugew0KICAgICAgaW5jbHVkZV9vbmNlIF9fRElSX18gLiAnLy4uL2NvbnRyb2xsZXJzL2luc2NyaXB0aW9uX2NvbnRyb2xsZXIucGhwJzsNCiAgICAgIGV4aXQoKTsNCn0NCg0KDQovLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8NCi8vLy8vLy8vLy8vLy8gICAgZm9uY3Rpb25zIHBvdXIgYWNjb3VudEFETUlOICAgLy8vLy8vLy8vLy8vLy8vLy8vLw0KLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vDQoNCi8vIGlmICghZW1wdHkoJF9QT1NUWydnbGFzc2VEYXRhJ10pKSB7DQovLyAgICAgICAvLyBWw6lyaWZpZXIgc2kgdW4gZmljaGllciBhIMOpdMOpIHTDqWzDqWNoYXJnw6kNCi8vICAgICAgIGlmIChpc3NldCgkX0ZJTEVTWydpbWFnZSddKSAmJiAkX0ZJTEVTWydpbWFnZSddWydlcnJvciddID09PSBVUExPQURfRVJSX09LKSB7DQovLyAgICAgICAgICAgICAvLyBEb3NzaWVyIG/DuSBzdG9ja2VyIGxlcyBpbWFnZXMNCi8vICAgICAgICAgICAgICR1cGxvYWRfZGlyID0gJy9hc3NldHMvaW1nL21hcnF1ZXMvJyAuICRicmFuZCAuICcvbHVuZXR0ZXMvJyAuICRjYXRlZ29yeSAuICcvJyAuICRnZW5kZXIgLiAnLyc7DQovLyAgICAgICAgICAgICAkZmlsZW5hbWUgPSBiYXNlbmFtZSgkX0ZJTEVTWydpbWFnZSddWyduYW1lJ10pOw0KLy8gICAgICAgICAgICAgJGZpbGVwYXRoID0gJHVwbG9hZF9kaXIgLiAkZmlsZW5hbWU7DQoNCi8vICAgICAgICAgICAgIC8vIETDqXBsYWNlciBsZSBmaWNoaWVyIHTDqWzDqWNoYXJnw6kgZGFucyBsZSByw6lwZXJ0b2lyZSBkZXMgaW1hZ2VzDQovLyAgICAgICAgICAgICBpZiAobW92ZV91cGxvYWRlZF9maWxlKCRfRklMRVNbJ2ltYWdlJ11bJ3RtcF9uYW1lJ10sICRmaWxlcGF0aCkpIHsNCg0KLy8gICAgICAgICAgICAgICAgICAgJG5hbWUgPSBodG1sc3BlY2lhbGNoYXJzKCRfUE9TVFsnbmFtZSddKTsNCi8vICAgICAgICAgICAgICAgICAgICRwcmljZSA9IGZsb2F0dmFsKCRfUE9TVFsncHJpY2UnXSk7DQovLyAgICAgICAgICAgICAgICAgICAkc3RvY2sgPSBpbnR2YWwoJF9QT1NUWydzdG9jayddKTsNCi8vICAgICAgICAgICAgICAgICAgICRpZF9icmFuZHMgPSBpbnR2YWwoJF9QT1NUWydicmFuZCddKTsNCi8vICAgICAgICAgICAgICAgICAgICRpZF9jYXRlZ29yeSA9IGludHZhbCgkX1BPU1RbJ2NhdGVnb3J5J10pOw0KLy8gICAgICAgICAgICAgICAgICAgJGlkX2dlbmRlciA9IGludHZhbCgkX1BPU1RbJ2dlbmRlciddKTsNCi8vICAgICAgICAgICAgICAgICAgICRjb2xvciA9IGh0bWxzcGVjaWFsY2hhcnMoJF9QT1NUWydjb2xvciddKTsNCi8vICAgICAgICAgICAgICAgICAgICRtYXR0ZXIgPSBodG1sc3BlY2lhbGNoYXJzKCRfUE9TVFsnbWF0dGVyJ10pOw0KLy8gICAgICAgICAgICAgICAgICAgJHNoYXBlID0gaHRtbHNwZWNpYWxjaGFycygkX1BPU1RbJ3NoYXBlJ10pOw0KDQoNCi8vICAgICAgICAgICAgICAgICAgIGFkZEl0ZW0oJG5hbWUsICRwcmljZSwgJHN0b2NrKTsNCi8vICAgICAgICAgICAgICAgICAgIGFkZEdsYXNzZXMoJGNvbG9yLCAkbWF0dGVyLCAkc2hhcGUsICRpbWFnZV9wYXRoLCAkaW1hZ2VfbmFtZSwgJGlkX2NhdGVnb3J5LCAkaWRfZ2VuZGVyLCAkaWRfYnJhbmRzLCAkaWRfaXRlbXMpOw0KLy8gICAgICAgICAgICAgfQ0KLy8gICAgICAgfQ0KLy8gfQ0KDQpmdW5jdGlvbiBham91dEx1bmV0dGUoKQ0Kew0KDQoNCiAgICAgIGlmICghZW1wdHkoJF9QT1NUWydnbGFzc2VEYXRhJ10pKSB7DQoNCiAgICAgICAgICAgIC8vIFbDqXJpZmllciBsYSBwcsOpc2VuY2UgZGVzIHZhcmlhYmxlcw0KICAgICAgICAgICAgJGJyYW5kID0gaXNzZXQoJF9QT1NUWydicmFuZCddKSA/ICRfUE9TVFsnYnJhbmQnXSA6ICdOb24gZMOpZmluaSc7DQogICAgICAgICAgICAkY2F0ZWdvcnkgPSBpc3NldCgkX1BPU1RbJ2NhdGVnb3J5J10pID8gJF9QT1NUWydjYXRlZ29yeSddIDogJ05vbiBkw6lmaW5pJzsNCiAgICAgICAgICAgICRnZW5kZXIgPSBpc3NldCgkX1BPU1RbJ2dlbmRlciddKSA/ICRfUE9TVFsnZ2VuZGVyJ10gOiAnTm9uIGTDqWZpbmknOw0KDQogICAgICAgICAgICBpZiAoJGNhdGVnb3J5ID09ICdvcHRpcXVlJykgew0KICAgICAgICAgICAgICAgICAgJGlkX2NhdGVnb3J5ID0gMTsNCiAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAkaWRfY2F0ZWdvcnkgPSAyOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAvLyBhdHRyaWJ1ZXIgdW4gZ2VucmUgw6AgdW4gaWQgDQoNCiAgICAgICAgICAgIGlmICgkZ2VuZGVyID09ICdob21tZXMnKSB7DQogICAgICAgICAgICAgICAgICAkaWRfZ2VuZGVyID0gMTsNCiAgICAgICAgICAgIH0gZWxzZWlmICgkZ2VuZGVyID09ICdmZW1tZXMnKSB7DQogICAgICAgICAgICAgICAgICAkaWRfZ2VuZGVyID0gMjsNCiAgICAgICAgICAgIH0gZWxzZWlmICgkZ2VuZGVyID09ICdlbmZhbnRzJykgew0KICAgICAgICAgICAgICAgICAgJGlkX2dlbmRlciA9IDM7DQogICAgICAgICAgICB9IGVsc2VpZiAoJGdlbmRlciA9PSAnbWl4dGUnKSB7DQogICAgICAgICAgICAgICAgICAkaWRfZ2VuZGVyID0gNDsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLy8gYXR0cmlidWVyIHVuZSBtYXJxdWUgw6AgdW4gaWQgDQoNCiAgICAgICAgICAgIGlmICgkYnJhbmQgPT0gJ2JyZXR0Jykgew0KICAgICAgICAgICAgICAgICAgJGlkX2JyYW5kcyA9IDE7DQogICAgICAgICAgICB9IGVsc2VpZiAoJGJyYW5kID09ICdwYXByaWthJykgew0KICAgICAgICAgICAgICAgICAgJGlkX2JyYW5kcyA9IDI7DQogICAgICAgICAgICB9IGVsc2VpZiAoJGJyYW5kID09ICdjbMOpbWVuY2UgJiBNYXJnYXV4Jykgew0KICAgICAgICAgICAgICAgICAgJGlkX2JyYW5kcyA9IDM7DQogICAgICAgICAgICB9IGVsc2VpZiAoJGJyYW5kID09ICdtaW5hbW90bycpIHsNCiAgICAgICAgICAgICAgICAgICRpZF9icmFuZHMgPSA0Ow0KICAgICAgICAgICAgfSBlbHNlaWYgKCRicmFuZCA9PSAnYmFsaScpIHsNCiAgICAgICAgICAgICAgICAgICRpZF9icmFuZHMgPSA1Ow0KICAgICAgICAgICAgfSBlbHNlaWYgKCRicmFuZCA9PSAnZGVtZXR6Jykgew0KICAgICAgICAgICAgICAgICAgJGlkX2JyYW5kcyA9IDY7DQogICAgICAgICAgICB9IGVsc2VpZiAoJGJyYW5kID09ICdhbmR5IEJyb29rJykgew0KICAgICAgICAgICAgICAgICAgJGlkX2JyYW5kcyA9IDc7DQogICAgICAgICAgICB9IGVsc2VpZiAoJGJyYW5kID09ICdmcmllbmRseSBGcmVuY2h5Jykgew0KICAgICAgICAgICAgICAgICAgJGlkX2JyYW5kcyA9IDg7DQogICAgICAgICAgICB9IGVsc2VpZiAoJGJyYW5kID09ICd3b29keXMnKSB7DQogICAgICAgICAgICAgICAgICAkaWRfYnJhbmRzID0gOTsNCiAgICAgICAgICAgIH0gZWxzZWlmICgkYnJhbmQgPT0gJ2xhIGJyaXF1ZSBldCBsYSB2aW9sZXR0ZScpIHsNCiAgICAgICAgICAgICAgICAgICRpZF9icmFuZHMgPSAxMDsNCiAgICAgICAgICAgIH0gZWxzZWlmICgkYnJhbmQgPT0gJ3N1bmRheSBzb21ld2hlcmUnKSB7DQogICAgICAgICAgICAgICAgICAkaWRfYnJhbmRzID0gMTE7DQogICAgICAgICAgICB9IGVsc2VpZiAoJGJyYW5kID09ICdtYWx0Jykgew0KICAgICAgICAgICAgICAgICAgJGlkX2JyYW5kcyA9IDEyOw0KICAgICAgICAgICAgfSBlbHNlaWYgKCRicmFuZCA9PSAnY2F6YWwnKSB7DQogICAgICAgICAgICAgICAgICAkaWRfYnJhbmRzID0gMTM7DQogICAgICAgICAgICB9IGVsc2VpZiAoJGJyYW5kID09ICdhcG9uZW0nKSB7DQogICAgICAgICAgICAgICAgICAkaWRfYnJhbmRzID0gMTQ7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC8vIFbDqXJpZmllciBzaSB1biBmaWNoaWVyIGEgw6l0w6kgdMOpbMOpY2hhcmfDqQ0KICAgICAgICAgICAgaWYgKGlzc2V0KCRfRklMRVNbJ2ltYWdlJ10pICYmICRfRklMRVNbJ2ltYWdlJ11bJ2Vycm9yJ10gPT09IFVQTE9BRF9FUlJfT0spIHsNCiAgICAgICAgICAgICAgICAgIC8vIERvc3NpZXIgb8O5IHN0b2NrZXIgbGVzIGltYWdlcw0KICAgICAgICAgICAgICAgICAgJHVwbG9hZF9kaXIgPSAgJ2Fzc2V0cy9pbWcvbWFycXVlcy8nIC4gJGJyYW5kIC4gJy9sdW5ldHRlcy8nIC4gJGNhdGVnb3J5IC4gJy8nIC4gJGdlbmRlciAuICcvJzsNCg0KICAgICAgICAgICAgICAgICAgLy8gUsOpY3Vww6lyZXIgbGUgbm9tIGR1IGZpY2hpZXIgZXQgc8OpY3VyaXNlciBzb24gbm9tDQogICAgICAgICAgICAgICAgICAkaW1hZ2VfbmFtZSA9IGJhc2VuYW1lKCRfRklMRVNbJ2ltYWdlJ11bJ25hbWUnXSk7DQogICAgICAgICAgICAgICAgICAkaW1hZ2VfcGF0aCA9ICR1cGxvYWRfZGlyIC4gJGltYWdlX25hbWU7DQoNCiAgICAgICAgICAgICAgICAgIC8vIFbDqXJpZmljYXRpb24gZHUgdHlwZSBkZSBmaWNoaWVyIChleC4gaW1hZ2VzIC5qcGcsIC5wbmcpDQogICAgICAgICAgICAgICAgICAkYWxsb3dlZF9leHRlbnNpb25zID0gWydqcGcnLCAnanBlZycsICdwbmcnXTsNCiAgICAgICAgICAgICAgICAgICRmaWxlX2V4dGVuc2lvbiA9IHN0cnRvbG93ZXIocGF0aGluZm8oJGltYWdlX25hbWUsIFBBVEhJTkZPX0VYVEVOU0lPTikpOw0KDQogICAgICAgICAgICAgICAgICBpZiAoIWluX2FycmF5KCRmaWxlX2V4dGVuc2lvbiwgJGFsbG93ZWRfZXh0ZW5zaW9ucykpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGRpZSgnRXJyZXVyIDogZmljaGllciBub24gYXV0b3Jpc8OpIChzZXVscyAuanBnLCAuanBlZywgLnBuZyBzb250IGFjY2VwdMOpcyknKTsNCiAgICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgICAgLy8gRMOpcGxhY2VyIGxlIGZpY2hpZXIgdMOpbMOpY2hhcmfDqSBkYW5zIGxlIHLDqXBlcnRvaXJlIGRlcyBpbWFnZXMNCiAgICAgICAgICAgICAgICAgIGlmIChtb3ZlX3VwbG9hZGVkX2ZpbGUoJF9GSUxFU1snaW1hZ2UnXVsndG1wX25hbWUnXSwgJGltYWdlX3BhdGgpKSB7DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIEFmZmljaGVyIHVuIG1lc3NhZ2UgZGUgc3VjY8Oocw0KICAgICAgICAgICAgICAgICAgICAgICAgZWNobyAnRmljaGllciBkw6lwbGFjw6kgYXZlYyBzdWNjw6hzIDogJyAuICRpbWFnZV9wYXRoOw0KICAgICAgICAgICAgICAgICAgICAgICAgLy8gU8OpY3VyaXNlciBldCB2YWxpZGVyIGxlcyBhdXRyZXMgZG9ubsOpZXMgZHUgZm9ybXVsYWlyZQ0KICAgICAgICAgICAgICAgICAgICAgICAgJG5hbWUgPSBodG1sc3BlY2lhbGNoYXJzKCRfUE9TVFsnbmFtZSddKTsNCiAgICAgICAgICAgICAgICAgICAgICAgICRwcmljZSA9IGZsb2F0dmFsKCRfUE9TVFsncHJpY2UnXSk7DQogICAgICAgICAgICAgICAgICAgICAgICAkc3RvY2sgPSBpbnR2YWwoJF9QT1NUWydzdG9jayddKTsNCg0KICAgICAgICAgICAgICAgICAgICAgICAgJGNvbG9yID0gaHRtbHNwZWNpYWxjaGFycygkX1BPU1RbJ2NvbG9yJ10pOw0KICAgICAgICAgICAgICAgICAgICAgICAgJG1hdHRlciA9IGh0bWxzcGVjaWFsY2hhcnMoJF9QT1NUWydtYXR0ZXInXSk7DQogICAgICAgICAgICAgICAgICAgICAgICAkc2hhcGUgPSBodG1sc3BlY2lhbGNoYXJzKCRfUE9TVFsnc2hhcGUnXSk7DQoNCg0KDQogICAgICAgICAgICAgICAgICAgICAgICAvLyBBam91dGVyIGwnaXRlbQ0KICAgICAgICAgICAgICAgICAgICAgICAgJGlkX2l0ZW1zID0gYWRkSXRlbSgkbmFtZSwgJHByaWNlLCAkc3RvY2spOw0KICAgICAgICAgICAgICAgICAgICAgICAgZWNobyAkaWRfaXRlbXM7DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIFbDqXJpZmllciBzaSBsJ0lEIGEgw6l0w6kgcsOpY3Vww6lyw6kNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmICgkaWRfaXRlbXMpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIEFqb3V0ZXIgbGVzIGx1bmV0dGVzIGVuIHV0aWxpc2FudCBsJ0lEIHLDqWN1cMOpcsOpDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoIWFkZEdsYXNzZXMoJGNvbG9yLCAkbWF0dGVyLCAkc2hhcGUsICRpbWFnZV9wYXRoLCAkaW1hZ2VfbmFtZSwgJGlkX2NhdGVnb3J5LCAkaWRfZ2VuZGVyLCAkaWRfYnJhbmRzLCAkaWRfaXRlbXMpKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaWUoJ0VycmV1ciBsb3JzIGRlIGxcJ2Fqb3V0IGRlcyBsdW5ldHRlcyBkYW5zIGxhIGJhc2UgZGUgZG9ubsOpZXMnKTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlY2hvICc8aDIgc3R5bGU9ImNvbG9yOiJncmVlbiIiPkx1bmV0dGVzIGFqb3V0w6llcyBhdmVjIHN1Y2PDqHM8L2gyPic7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGllKCdFcnJldXIgbG9ycyBkZSBsXCdham91dCBkZSBsXCdpdGVtIGRhbnMgbGEgYmFzZSBkZSBkb25uw6llcycpOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGRpZSgnQXVjdW5lIGltYWdlIHTDqWzDqWNoYXJnw6llIG91IGVycmV1ciBkYW5zIGxlIHTDqWzDqWNoYXJnZW1lbnQuJyk7DQogICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQogICAgICB9DQp9DQovL3Ryb3V2ZXIgY29tbWVudCByw6ljdXDDqXJlciBsJ2lkIGRlIGFkZGl0ZW1zIHBvdXIgbWVyY3JlZGkgIDE5LzAzLzIwMjUiO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAZG9jQmxvY2siO047czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBtZXRhZGF0YSI7YTowOnt9fQ==";