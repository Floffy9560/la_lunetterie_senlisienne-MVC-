1745999999
8a0c4faa9771445189035ca844487507-phpdoc%3A7d4de69ba2f4049c91ae148cd6907640-3bffd66d8a47410170bad2463a7984dc
s:48444:"O:33:"phpDocumentor\Reflection\Php\File":14:{s:39:" phpDocumentor\Reflection\Php\File name";s:19:"fonctions_farms.php";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:0:{}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:6:{s:15:"\displayCards()";O:38:"phpDocumentor\Reflection\Php\Function_":9:{s:49:" phpDocumentor\Reflection\Php\Function_ arguments";a:0:{}s:48:" phpDocumentor\Reflection\Php\Function_ location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:184;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:51:" phpDocumentor\Reflection\Php\Function_ endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:210;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\Php\Function_ returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:45:" phpDocumentor\Reflection\Php\Function_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:15:"\displayCards()";s:36:" phpDocumentor\Reflection\Fqsen name";s:12:"displayCards";}s:48:" phpDocumentor\Reflection\Php\Function_ docBlock";N;s:60:" phpDocumentor\Reflection\Php\Function_ hasReturnByReference";b:0;s:48:" phpDocumentor\Reflection\Php\Function_ metadata";a:0:{}s:50:" phpDocumentor\Reflection\Php\Function_ attributes";a:0:{}}s:17:"\displayGlasses()";O:38:"phpDocumentor\Reflection\Php\Function_":9:{s:49:" phpDocumentor\Reflection\Php\Function_ arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:43:" phpDocumentor\Reflection\Php\Argument name";s:7:"glasses";s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:48:" phpDocumentor\Reflection\Php\Function_ location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:212;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:51:" phpDocumentor\Reflection\Php\Function_ endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:231;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\Php\Function_ returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:45:" phpDocumentor\Reflection\Php\Function_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:17:"\displayGlasses()";s:36:" phpDocumentor\Reflection\Fqsen name";s:14:"displayGlasses";}s:48:" phpDocumentor\Reflection\Php\Function_ docBlock";N;s:60:" phpDocumentor\Reflection\Php\Function_ hasReturnByReference";b:0;s:48:" phpDocumentor\Reflection\Php\Function_ metadata";a:0:{}s:50:" phpDocumentor\Reflection\Php\Function_ attributes";a:0:{}}s:15:"\displayBrand()";O:38:"phpDocumentor\Reflection\Php\Function_":9:{s:49:" phpDocumentor\Reflection\Php\Function_ arguments";a:0:{}s:48:" phpDocumentor\Reflection\Php\Function_ location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:237;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:51:" phpDocumentor\Reflection\Php\Function_ endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:245;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\Php\Function_ returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:45:" phpDocumentor\Reflection\Php\Function_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:15:"\displayBrand()";s:36:" phpDocumentor\Reflection\Fqsen name";s:12:"displayBrand";}s:48:" phpDocumentor\Reflection\Php\Function_ docBlock";N;s:60:" phpDocumentor\Reflection\Php\Function_ hasReturnByReference";b:0;s:48:" phpDocumentor\Reflection\Php\Function_ metadata";a:0:{}s:50:" phpDocumentor\Reflection\Php\Function_ attributes";a:0:{}}s:13:"\insertData()";O:38:"phpDocumentor\Reflection\Php\Function_":9:{s:49:" phpDocumentor\Reflection\Php\Function_ arguments";a:3:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:43:" phpDocumentor\Reflection\Php\Argument name";s:5:"table";s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}i:1;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:43:" phpDocumentor\Reflection\Php\Argument name";s:7:"columns";s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}i:2;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:43:" phpDocumentor\Reflection\Php\Argument name";s:6:"values";s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:48:" phpDocumentor\Reflection\Php\Function_ location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:254;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:51:" phpDocumentor\Reflection\Php\Function_ endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:279;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\Php\Function_ returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:45:" phpDocumentor\Reflection\Php\Function_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:13:"\insertData()";s:36:" phpDocumentor\Reflection\Fqsen name";s:10:"insertData";}s:48:" phpDocumentor\Reflection\Php\Function_ docBlock";N;s:60:" phpDocumentor\Reflection\Php\Function_ hasReturnByReference";b:0;s:48:" phpDocumentor\Reflection\Php\Function_ metadata";a:0:{}s:50:" phpDocumentor\Reflection\Php\Function_ attributes";a:0:{}}s:10:"\addItem()";O:38:"phpDocumentor\Reflection\Php\Function_":9:{s:49:" phpDocumentor\Reflection\Php\Function_ arguments";a:3:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:43:" phpDocumentor\Reflection\Php\Argument name";s:4:"name";s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}i:1;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:43:" phpDocumentor\Reflection\Php\Argument name";s:5:"price";s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}i:2;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:43:" phpDocumentor\Reflection\Php\Argument name";s:5:"stock";s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:48:" phpDocumentor\Reflection\Php\Function_ location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:280;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:51:" phpDocumentor\Reflection\Php\Function_ endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:288;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\Php\Function_ returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:45:" phpDocumentor\Reflection\Php\Function_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:10:"\addItem()";s:36:" phpDocumentor\Reflection\Fqsen name";s:7:"addItem";}s:48:" phpDocumentor\Reflection\Php\Function_ docBlock";N;s:60:" phpDocumentor\Reflection\Php\Function_ hasReturnByReference";b:0;s:48:" phpDocumentor\Reflection\Php\Function_ metadata";a:0:{}s:50:" phpDocumentor\Reflection\Php\Function_ attributes";a:0:{}}s:13:"\addGlasses()";O:38:"phpDocumentor\Reflection\Php\Function_":9:{s:49:" phpDocumentor\Reflection\Php\Function_ arguments";a:9:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:43:" phpDocumentor\Reflection\Php\Argument name";s:5:"color";s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}i:1;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:43:" phpDocumentor\Reflection\Php\Argument name";s:6:"matter";s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}i:2;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:43:" phpDocumentor\Reflection\Php\Argument name";s:5:"shape";s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}i:3;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:43:" phpDocumentor\Reflection\Php\Argument name";s:10:"image_path";s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}i:4;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:43:" phpDocumentor\Reflection\Php\Argument name";s:10:"image_name";s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}i:5;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:43:" phpDocumentor\Reflection\Php\Argument name";s:11:"id_category";s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}i:6;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:43:" phpDocumentor\Reflection\Php\Argument name";s:9:"id_gender";s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}i:7;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:43:" phpDocumentor\Reflection\Php\Argument name";s:9:"id_brands";s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}i:8;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:43:" phpDocumentor\Reflection\Php\Argument name";s:8:"id_items";s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:48:" phpDocumentor\Reflection\Php\Function_ location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:293;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:51:" phpDocumentor\Reflection\Php\Function_ endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:301;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\Php\Function_ returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:45:" phpDocumentor\Reflection\Php\Function_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:13:"\addGlasses()";s:36:" phpDocumentor\Reflection\Fqsen name";s:10:"addGlasses";}s:48:" phpDocumentor\Reflection\Php\Function_ docBlock";N;s:60:" phpDocumentor\Reflection\Php\Function_ hasReturnByReference";b:0;s:48:" phpDocumentor\Reflection\Php\Function_ metadata";a:0:{}s:50:" phpDocumentor\Reflection\Php\Function_ attributes";a:0:{}}}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:0:{}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}s:40:" phpDocumentor\Reflection\Php\File enums";a:0:{}s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"3bffd66d8a47410170bad2463a7984dc";s:39:" phpDocumentor\Reflection\Php\File path";s:26:"models/fonctions_farms.php";s:41:" phpDocumentor\Reflection\Php\File source";s:22082:"<?php


// function displayCards()
// {

//       if (!empty($_GET['brands']) && is_array($_GET['brands'])) {
//             $brands = $_GET['brands'];

//             foreach ($brands as $brand) {


//                   $displayBrand = searchByBrand($brand);

//                   foreach ($displayBrand as $lunette) {
//                         $idGlasses = $lunette['id_glasses'];
//                         echo "<div class='cards' id='lunette' data-id='" . intval($idGlasses) . "'>";
//                         echo '<img src="' . htmlspecialchars($lunette['image_path']) . '" alt="Lunette de marque ' . htmlspecialchars($lunette['image_name']) . '" style="width: 100%; height: 150px;" class="img">';
//                         echo '<h3>' . ucfirst(htmlspecialchars($lunette['name'])) . '</h3>';
//                         echo '<p>Prix: ' . intval($lunette['price']) . '€</p>';
//                         echo '<p>Couleur: ' . ucfirst(htmlspecialchars($lunette['color'])) . '</p>';
//                         echo '<p>Matière: ' . ucfirst(htmlspecialchars($lunette['matter'])) . '</p>';
//                         echo '<p>Genre: ' . ucfirst(htmlspecialchars($lunette['gender'])) . '</p>';
//                         echo '<p>Catégorie: ' . ucfirst(htmlspecialchars($lunette['category'])) . '</p>';
//                         echo '<p>Marque: ' . ucfirst(htmlspecialchars($lunette['brand'])) . '</p>';
//                         echo '<div class="footerCards">';
//                         echo "<button  class='buttonPushCart'>Ajouter au panier</i></button>";
//                         echo "<i class='bi bi-heart-fill'></i>";
//                         echo '</div>';
//                         echo "</div>";
//                   }
//             }
//       } elseif (!empty($_GET['shapes']) && is_array($_GET['shapes'])) {
//             $shapes = $_GET['shapes'];

//             foreach ($shapes as $shape) {


//                   $displayShape = searchByShape($shape);

//                   foreach ($displayShape as $lunette) {
//                         $idGlasses = $lunette['id_glasses'];
//                         echo "<div class='cards' id='lunette' data-id='" . intval($idGlasses) . "'>";
//                         echo '<img src="' . htmlspecialchars($lunette['image_path']) . '" alt="Lunette de marque ' . htmlspecialchars($lunette['image_name']) . '" style="width: 100%; height: 150px;" class="img">';
//                         echo '<h3>' . ucfirst(htmlspecialchars($lunette['name'])) . '</h3>';
//                         echo '<p>Prix: ' . intval($lunette['price']) . '€</p>';
//                         echo '<p>Couleur: ' . ucfirst(htmlspecialchars($lunette['color'])) . '</p>';
//                         echo '<p>Matière: ' . ucfirst(htmlspecialchars($lunette['matter'])) . '</p>';
//                         echo '<p>Genre: ' . ucfirst(htmlspecialchars($lunette['gender'])) . '</p>';
//                         echo '<p>Catégorie: ' . ucfirst(htmlspecialchars($lunette['category'])) . '</p>';
//                         echo '<p>Marque: ' . ucfirst(htmlspecialchars($lunette['brand'])) . '</p>';
//                         echo '<div class="footerCards">';
//                         echo "<button  class='buttonPushCart'>Ajouter au panier</i></button>";
//                         echo "<i class='bi bi-heart-fill'></i>";
//                         echo '</div>';
//                         echo "</div>";
//                   }
//             }
//       } elseif (!empty($_GET['matters']) && is_array($_GET['matters'])) {
//             $matters = $_GET['matters'];

//             foreach ($matters as $matter) {


//                   $displayMatter = searchByMatter($matter);
//                   foreach ($displayMatter as $lunette) {
//                         $idGlasses = $lunette['id_glasses'];
//                         echo "<div class='cards' id='lunette' data-id='" . intval($idGlasses) . "'>";
//                         echo '<img src="' . htmlspecialchars($lunette['image_path']) . '" alt="Lunette de marque ' . htmlspecialchars($lunette['image_name']) . '" style="width: 100%; height: 150px;" class="img">';
//                         echo '<h3>' . ucfirst(htmlspecialchars($lunette['name'])) . '</h3>';
//                         echo '<p>Prix: ' . intval($lunette['price']) . '€</p>';
//                         echo '<p>Couleur: ' . ucfirst(htmlspecialchars($lunette['color'])) . '</p>';
//                         echo '<p>Matière: ' . ucfirst(htmlspecialchars($lunette['matter'])) . '</p>';
//                         echo '<p>Genre: ' . ucfirst(htmlspecialchars($lunette['gender'])) . '</p>';
//                         echo '<p>Catégorie: ' . ucfirst(htmlspecialchars($lunette['category'])) . '</p>';
//                         echo '<p>Marque: ' . ucfirst(htmlspecialchars($lunette['brand'])) . '</p>';
//                         echo '<div class="footerCards">';
//                         echo "<button  class='buttonPushCart'>Ajouter au panier</i></button>";
//                         echo "<i class='bi bi-heart-fill'></i>";
//                         echo '</div>';
//                         echo "</div>";
//                   }
//             }
//       } elseif (!empty($_GET['genders']) && is_array($_GET['genders'])) {
//             $genders = $_GET['genders'];

//             foreach ($genders as $gender) {

//                   $displayGender = searchByGender($gender);
//                   foreach ($displayGender as $lunette) {
//                         $idGlasses = $lunette['id_glasses'];
//                         echo "<div class='cards' id='lunette' data-id='" . intval($idGlasses) . "'>";
//                         echo '<img src="' . htmlspecialchars($lunette['image_path']) . '" alt="Lunette de marque ' . htmlspecialchars($lunette['image_name']) . '" style="width: 100%; height: 150px;" class="img">';
//                         echo '<h3>' . ucfirst(htmlspecialchars($lunette['name'])) . '</h3>';
//                         echo '<p>Prix: ' . intval($lunette['price']) . '€</p>';
//                         echo '<p>Couleur: ' . ucfirst(htmlspecialchars($lunette['color'])) . '</p>';
//                         echo '<p>Matière: ' . ucfirst(htmlspecialchars($lunette['matter'])) . '</p>';
//                         echo '<p>Genre: ' . ucfirst(htmlspecialchars($lunette['gender'])) . '</p>';
//                         echo '<p>Catégorie: ' . ucfirst(htmlspecialchars($lunette['category'])) . '</p>';
//                         echo '<p>Marque: ' . ucfirst(htmlspecialchars($lunette['brand'])) . '</p>';
//                         echo '<div class="footerCards">';
//                         echo "<button  class='buttonPushCart'>Ajouter au panier</i></button>";
//                         echo "<i class='bi bi-heart-fill'></i>";
//                         echo '</div>';
//                         echo "</div>";
//                   }
//             }
//       } elseif (!empty($_GET['colors']) && is_array($_GET['colors'])) {
//             $colors = $_GET['colors'];

//             foreach ($colors as $color) {

//                   $displayColorGlasses = searchByColor($color);
//                   foreach ($displayColorGlasses as $lunette) {
//                         $idGlasses = $lunette['id_glasses'];
//                         echo "<div class='cards' id='lunette' data-id='" . intval($idGlasses) . "'>";
//                         echo '<img src="' . htmlspecialchars($lunette['image_path']) . '" alt="Lunette de marque ' . htmlspecialchars($lunette['image_name']) . '" style="width: 100%; height: 150px;" class="img">';
//                         echo '<h3>' . ucfirst(htmlspecialchars($lunette['name'])) . '</h3>';
//                         echo '<p>Prix: ' . intval($lunette['price']) . '€</p>';
//                         echo '<p>Couleur: ' . ucfirst(htmlspecialchars($lunette['color'])) . '</p>';
//                         echo '<p>Matière: ' . ucfirst(htmlspecialchars($lunette['matter'])) . '</p>';
//                         echo '<p>Genre: ' . ucfirst(htmlspecialchars($lunette['gender'])) . '</p>';
//                         echo '<p>Catégorie: ' . ucfirst(htmlspecialchars($lunette['category'])) . '</p>';
//                         echo '<p>Marque: ' . ucfirst(htmlspecialchars($lunette['brand'])) . '</p>';
//                         echo '<div class="footerCards">';
//                         echo "<button  class='buttonPushCart'>Ajouter au panier</i></button>";
//                         echo "<i class='bi bi-heart-fill'></i>";
//                         echo '</div>';
//                         echo "</div>";
//                   }
//             }
//       } else {

//             $afficherLunettes = insertGlasseData();
//             foreach ($afficherLunettes as $lunette) {

//                   // Utilisation de l'id_glasses comme identifiant unique pour chaque carte ( va être utile pour la suppression de locale storage)
//                   $idGlasses = $lunette['id_glasses'];



//                   // echo "<pre>";
//                   // print_r($lunette);
//                   // echo "</pre>";

//                   // Cela nous donne :
//                   // (
//                   //    [id_glasses] => 27
//                   //    [color] => noir-or
//                   //    [shape] => pantos
//                   //    [matter] => acier inoxydable
//                   //    [image_path] => /../assets/img/marques/Cazal/lunettes/solaires/hommes/MOD 683-cazal.webp
//                   //    [image_name] => mod 683
//                   //    [id_category] => 2
//                   //    [id_gender] => 1
//                   //    [id_brands] => 13
//                   //    [id_items] => 27
//                   //    [name] => mod 683
//                   //    [price] => 500.00
//                   //    [stock] => 1
//                   //    [brand] => Cazal
//                   //    [category] => solaire
//                   //    [gender] => homme
//                   // )

//                   echo "<div class='cards' id='lunette' data-id='" . intval($idGlasses) . "'>";
//                   echo '<img src="' . htmlspecialchars($lunette['image_path']) . '" alt="Lunette de marque ' . htmlspecialchars($lunette['image_name']) . '" style="width: 100%; height: 150px;" class="img">';
//                   echo '<h3>' . ucfirst(htmlspecialchars($lunette['name'])) . '</h3>';
//                   echo '<p id="price">Prix: ' . intval($lunette['price']) . ' €</p>';
//                   echo '<p>Couleur: ' . ucfirst(htmlspecialchars($lunette['color'])) . '</p>';
//                   echo '<p>Matière: ' . ucfirst(htmlspecialchars($lunette['matter'])) . '</p>';
//                   echo '<p>Genre: ' . ucfirst(htmlspecialchars($lunette['gender'])) . '</p>';
//                   echo '<p>Catégorie: ' . ucfirst(htmlspecialchars($lunette['category'])) . '</p>';
//                   echo '<p>Marque: ' . ucfirst(htmlspecialchars($lunette['brand'])) . '</p>';
//                   echo '<div class="footerCards">';
//                   echo "<button  class='buttonPushCart'>Ajouter au panier</i></button>";
//                   echo "<i class='bi bi-heart-fill'></i>";
//                   echo '</div>';
//                   echo "</div>";
//             }
//       }
// }

function displayCards()
{
      // Liste des filtres possibles et des fonctions associées
      $filters = [
            'brands' => 'searchByBrand',
            'shapes' => 'searchByShape',
            'matters' => 'searchByMatter',
            'genders' => 'searchByGender',
            'colors' => 'searchByColor'
      ];

      foreach ($filters as $key => $function) {
            if (!empty($_GET[$key]) && is_array($_GET[$key])) {
                  $filteredGlasses = [];

                  foreach ($_GET[$key] as $value) {
                        $filteredGlasses = array_merge($filteredGlasses, $function($value));
                  }

                  displayGlasses($filteredGlasses);
                  return; // Stopper l'exécution après avoir affiché les lunettes filtrées
            }
      }

      // Si aucun filtre n'est appliqué, afficher toutes les lunettes
      displayGlasses(insertGlasseData());
}

function displayGlasses($glasses)
{
      foreach ($glasses as $lunette) {
            $idGlasses = $lunette['id_glasses'];
            echo "<div class='cards' id='lunette' data-id='$idGlasses'>";
            echo '<img src="' . htmlspecialchars($lunette['image_path']) . '" alt="Lunette de marque ' . htmlspecialchars($lunette['image_name']) . '" style="width: 100%; height: 150px;" class="img">';
            echo '<h3>' . ucfirst(htmlspecialchars($lunette['name'])) . '</h3>';
            echo '<p id="price">Prix: ' . intval($lunette['price']) . '€</p>';
            echo '<p>Couleur: ' . ucfirst(htmlspecialchars($lunette['color'])) . '</p>';
            echo '<p>Matière: ' . ucfirst(htmlspecialchars($lunette['matter'])) . '</p>';
            echo '<p>Genre: ' . ucfirst(htmlspecialchars($lunette['gender'])) . '</p>';
            echo '<p>Catégorie: ' . ucfirst(htmlspecialchars($lunette['category'])) . '</p>';
            echo '<p>Marque: ' . ucfirst(htmlspecialchars($lunette['brand'])) . '</p>';
            echo '<div class="footerCards">';
            echo "<button class='buttonPushCart'>Ajouter au panier</button>";
            echo "<i class='bi bi-heart-fill'></i>";
            echo '</div>';
            echo "</div>";
      }
}
/////////////////////////////////////////////////////////////////////////
///////////  requetes sql pour afficher toutes les marques    ///////////
/////////////////////////////////////////////////////////////////////////

// Récuperer les diff marques
function displayBrand()
{
      $pdo = getconnexion();
      $sql = "SELECT `brand` FROM `kghdsi_brands`;";
      $stmt = $pdo->prepare($sql);
      $stmt->execute();
      $brands = $stmt->fetchAll(PDO::FETCH_ASSOC);
      return $brands;
}



/////////////////////////////////////////////////////////////////////////
/////////// requetes sql pour ajouter des lunnettes à la BDD  ///////////
/////////////////////////////////////////////////////////////////////////

//fonction générale qui prend en paramètres la table sélectionné le nbr et le nom des colonnes ainsi que le nom des valeurs
function insertData($table, $columns, $values)
{
      // Connexion à la base de données
      $pdo = getConnexion();

      // Construction de la requête SQL dynamique en fonction de la table, des colonnes et des valeurs
      $columnStr = implode(", ", $columns);
      $valueStr = ":" . implode(", :", $columns);

      try {
            $stmt = $pdo->prepare("INSERT INTO $table ($columnStr) VALUES ($valueStr)");

            // Lier les paramètres dynamiquement
            foreach ($columns as $index => $column) {
                  $stmt->bindParam(":$column", $values[$index], PDO::PARAM_STR);
            }

            $stmt->execute();

            // Retourner l'ID du dernier élément inséré si nécessaire
            return $pdo->lastInsertId();
      } catch (PDOException $e) {
            echo "⚠️ Erreur insertion dans la table $table SQL : " . $e->getMessage();
            return false;
      }
}
function addItem($name, $price, $stock)
{
      // Définir les colonnes et les valeurs à insérer
      $columns = ['name', 'price', 'stock'];
      $values = [$name, $price, $stock];

      // Appeler la fonction générique d'insertion
      return insertData('kghdsi_items', $columns, $values);
}


//implenter une paire de lunette 

function addGlasses($color, $matter, $shape, $image_path, $image_name, $id_category, $id_gender, $id_brands, $id_items)
{
      // Définir les colonnes et les valeurs à insérer
      $columns = ['color', 'matter', 'shape', 'image_path', 'image_name', 'id_category', 'id_gender', 'id_brands', 'id_items'];
      $values = [$color, $matter, $shape, $image_path, $image_name, $id_category, $id_gender, $id_brands, $id_items];

      // Appeler la fonction générique d'insertion
      return insertData('kghdsi_glasses', $columns, $values);
}


// function addItems($name, $price, $stock)
// {
//       $pdo = getConnexion();
//       try {

//             $stmt = $pdo->prepare("INSERT INTO kghdsi_items (name,price,stock) VALUES (:name,:price,:stock)");
//             $stmt->bindParam(':name', $name, PDO::PARAM_STR);
//             $stmt->bindParam(':price', $price, PDO::PARAM_INT);
//             $stmt->bindParam(':stock', $stock, PDO::PARAM_INT);
//             $stmt->execute();
//             return $pdo->lastInsertId();
//             echo "Données ITEMS insérées avec succès";
//       } catch (PDOException $e) {
//             // $_SESSION['error'] = "⚠️ Erreur insertion items SQL : " . $e->getMessage();
//             echo "⚠️ Erreur insertion items SQL : " . $e->getMessage();
//             return false;
//       }
// }

// function addGlasses($color, $matter, $shape, $image_path, $image_name, $id_category, $id_gender, $id_brands, $id_items)
// {
//       $pdo = getConnexion();
//       try {

//             $stmt = $pdo->prepare("
//                         INSERT INTO kghdsi_glasses 
//                         (color, matter, shape, image_path, image_name, id_category, id_gender, id_brands, id_items) 
//                         VALUES 
//                         (:color, :matter, :shape, :image_path, :image_name, :id_category, :id_gender, :id_brands, :id_items)
// ");
//             $stmt->bindParam(':color', $color, PDO::PARAM_STR);
//             $stmt->bindParam(':matter', $matter, PDO::PARAM_STR);
//             $stmt->bindParam(':shape', $shape, PDO::PARAM_STR);
//             $stmt->bindParam(':image_path', $image_path, PDO::PARAM_STR);
//             $stmt->bindParam(':image_name', $image_name, PDO::PARAM_STR);
//             $stmt->bindParam(':id_category', $id_category, PDO::PARAM_INT);
//             $stmt->bindParam(':id_gender', $id_gender, PDO::PARAM_INT);
//             $stmt->bindParam(':id_brands', $id_brands, PDO::PARAM_INT);
//             $stmt->bindParam(':id_items', $id_items, PDO::PARAM_INT);
//             $stmt->execute();
//             echo "Données GLASSES insérées avec succès";
//       } catch (PDOException $e) {
//             // $_SESSION['error'] = "⚠️ Erreur insertion glasses SQL : " . $e->getMessage();
//             echo "⚠️ Erreur insertion glasses SQL : " . $e->getMessage();
//             return false;
//       }
// }


///////////////////////////////////////////////////////////////
// Insérer des lunettes dans la BDD à partir d'un fichier Json
///////////////////////////////////////////////////////////////

// if (isset($_POST['BDD'])) {
//       foreach ($glasses as $glasse) {

//             $brand = strtolower($glasse['brand']);
//             $gender = strtolower($glasse["gender"]);
//             $category = strtolower($glasse["category"]);
//             $name =  strtolower($glasse['name']);
//             $price = $glasse['price'];
//             $color = strtolower($glasse['color']);
//             $matter = strtolower($glasse['matter']);
//             $shape = strtolower($glasse['shape']);
//             $stock = $glasse['stock'];
//             $image_name = strtolower($glasse['image_name']);
//             $image_path = $glasse['image_path'];

//             // attribuer une catégorie à un id 
//             if ($category == 'optique') {
//                   $id_category = 1;
//             } else {
//                   $id_category = 2;
//             }

//             // attribuer un genre à un id 

//             if ($gender == 'homme') {
//                   $id_gender = 1;
//             } elseif ($gender == 'femme') {
//                   $id_gender = 2;
//             } elseif ($gender == 'enfant') {
//                   $id_gender = 3;
//             } elseif ($gender == 'mixte') {
//                   $id_gender = 4;
//             }

//             // attribuer une marque à un id 

//             if ($brand == 'brett') {
//                   $id_brands = 1;
//             } elseif ($brand == 'paprika') {
//                   $id_brands = 2;
//             } elseif ($brand == 'clémence & Margaux') {
//                   $id_brands = 3;
//             } elseif ($brand == 'minamoto') {
//                   $id_brands = 4;
//             } elseif ($brand == 'bali') {
//                   $id_brands = 5;
//             } elseif ($brand == 'demetz') {
//                   $id_brands = 6;
//             } elseif ($brand == 'andy Brook') {
//                   $id_brands = 7;
//             } elseif ($brand == 'friendly Frenchy') {
//                   $id_brands = 8;
//             } elseif ($brand == 'woodys') {
//                   $id_brands = 9;
//             } elseif ($brand == 'la brique et la violette') {
//                   $id_brands = 10;
//             } elseif ($brand == 'sunday somewhere') {
//                   $id_brands = 11;
//             } elseif ($brand == 'malt') {
//                   $id_brands = 12;
//             } elseif ($brand == 'cazal') {
//                   $id_brands = 13;
//             } elseif ($brand == 'aponem') {
//                   $id_brands = 14;
//             }



//             // $id_items = addItems($name, $price, $stock);
//             $id_items = addItem($name, $price, $stock);
//             addGlasses($color, $matter, $shape, $image_path, $image_name, $id_category, $id_gender, $id_brands, $id_items);
//       }
// }";s:43:" phpDocumentor\Reflection\Php\File docBlock";N;s:43:" phpDocumentor\Reflection\Php\File metadata";a:0:{}}";