1745999999
8a0c4faa9771445189035ca844487507-phpdoc%3Ad0b9aa06532fe8b985275972b6ba1b3d-fb98e578bb028991b741906638059a16
s:7480:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxNDp7czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBuYW1lIjtzOjEzOiJtdXR1ZWxsZXMucGhwIjtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWVzcGFjZXMiO2E6MDp7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW5jbHVkZXMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAZnVuY3Rpb25zIjthOjA6e31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNvbnN0YW50cyI7YTowOnt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBjbGFzc2VzIjthOjA6e31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGludGVyZmFjZXMiO2E6MDp7fXM6NDE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAdHJhaXRzIjthOjA6e31zOjQwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGVudW1zIjthOjA6e31zOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6ImZiOThlNTc4YmIwMjg5OTFiNzQxOTA2NjM4MDU5YTE2IjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHBhdGgiO3M6MTk6InZpZXdzL211dHVlbGxlcy5waHAiO3M6NDE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAc291cmNlIjtzOjQ3MTA6IjwhRE9DVFlQRSBodG1sPg0KPGh0bWwgbGFuZz0iZnIiPg0KDQo8aGVhZD4NCiAgICA8bWV0YSBjaGFyc2V0PSJVVEYtOCIgLz4NCiAgICA8bWV0YSBuYW1lPSJ2aWV3cG9ydCIgY29udGVudD0id2lkdGg9ZGV2aWNlLXdpZHRoLCBpbml0aWFsLXNjYWxlPTEuMCIgLz4NCiAgICA8dGl0bGU+TXV0dWVsbGVzPC90aXRsZT4NCiAgICA8bGluayByZWw9InByZWNvbm5lY3QiIGhyZWY9Imh0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20iIC8+DQogICAgPGxpbmsgcmVsPSJwcmVjb25uZWN0IiBocmVmPSJodHRwczovL2ZvbnRzLmdzdGF0aWMuY29tIiBjcm9zc29yaWdpbiAvPg0KICAgIDxsaW5rDQogICAgICAgIGhyZWY9Imh0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzMj9mYW1pbHk9RGFuY2luZytTY3JpcHQ6d2dodEA0MDAuLjcwMCZmYW1pbHk9T3BlbitTYW5zOml0YWwsd2dodEAwLDMwMC4uODAwOzEsMzAwLi44MDAmZmFtaWx5PVNvdXJjZStDb2RlK1BybzppdGFsLHdnaHRAMCwyMDAuLjkwMDsxLDIwMC4uOTAwJmRpc3BsYXk9c3dhcCINCiAgICAgICAgcmVsPSJzdHlsZXNoZWV0IiAvPg0KICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iaHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L25wbS9ib290c3RyYXAtaWNvbnNAMS4xMS4zL2ZvbnQvYm9vdHN0cmFwLWljb25zLm1pbi5jc3MiPg0KICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iYXNzZXRzL2Nzcy9oZWFkZXJGb290ZXIuY3NzIiAvPg0KICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iYXNzZXRzL2Nzcy9tdXR1ZWxsZXMuY3NzIiAvPg0KPC9oZWFkPg0KPD9waHAgaW5jbHVkZSBfX0RJUl9fIC4gJy8uLi90ZW1wbGF0ZXMvaGVhZGVyLnBocCcgPz4NCg0KPGJvZHk+DQogICAgPGRpdiBjbGFzcz0iY29udGFpbmVyU2VjdGlvbiI+DQogICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24iPg0KICAgICAgICAgICAgPGgyPkxlIDEvMyBwYXlhbnQgb3B0aXF1ZTwvaDI+DQogICAgICAgICAgICA8cD5Qb3VyIGNlIGZhaXJlIHZlbmV6IGVuIG1hZ2FzaW4sIG11bmkgZGUgdm90cmUgcHJlc2NyaXB0aW9uIGVuIGNvdXJzIGRlIHZhbGlkaXTDqSAsIGRlIHZvdHJlIGNhcnRlDQogICAgICAgICAgICAgICAgdml0YWxlIGFpbnNpIHF1ZSBkZSB2b3RyZSBjYXJ0ZSBtdXR1ZWxsZS4gUG91ciByYXBwZWxsZSBsYSB2YWxpZGl0w6kgZGVzIG9yZG9ubmFuY2UgOjxicj4NCiAgICAgICAgICAgICAgICA9PiBEZSAwIMOgIDE2IGFucyBs4oCZb3Jkb25uYW5jZSBlc3QgdmFsYWJsZSAxIGFucyA8YnI+DQogICAgICAgICAgICAgICAgPT4gRGUgMTYgw6AgNDIgYW5zIGzigJlvcmRvbm5hbmNlIGVzdCB2YWxhYmxlIDUgYW5zIDxicj4NCiAgICAgICAgICAgICAgICA9PiBBdSBkZWzDoCBkZSA0MiBhbnMgbOKAmW9yZG9ubmFuY2UgZXN0IHZhbGFibGUgMyBhbnMgPGJyPg0KDQogICAgICAgICAgICAgICAgPT4gRGFucyBsZSBjYXMgb3UgbGUgbWFnYXNpbiBu4oCZZXN0IHBhcyBhZmZpbGllciDDoCB2b3RyZSBtdXR1ZWxsZSB1biBzeXN0w6htZSBlc3QgbWlzIGVuIHBsYWNlIHBvdXIgdm91cw0KICAgICAgICAgICAgICAgIGZhY2lsaXRlciBsZSBwYWllbWVudCAodm9pciBjb25kaXRpb24gZW4gbWFnYXNpbikuDQoNCiAgICAgICAgICAgICAgICBTaSB2b3VzIGF2ZXogdW4gY29udHJhdCByZXNwb25zYWJsZSwgdm91cyBwb3V2ZXogcHJlbmRyZSBjb25uYWlzc2FuY2UgZGUgbGEgcsOpZm9ybWUgMTAwJSBzaSBkZXNzb3VzLg0KICAgICAgICAgICAgPC9wPg0KICAgICAgICA8L2Rpdj4NCiAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbiI+DQogICAgICAgICAgICA8aDI+VG91dCBzYXZvaXIgc3VyIGxhIHLDqWZvcm1lIDEwMCUgU0FOVMOJICE8L2gyPg0KICAgICAgICAgICAgPHA+RGVwdWlzIGxlIDFlciBqYW52aWVyIDIwMjAsIHVuZSBub3V2ZWxsZSByw6lmb3JtZSBhIHZ1IGxlIGpvdXIgc291cyBsZSBub20gZGUgwqsgMTAwJSBTYW50w6kgwrssDQogICAgICAgICAgICAgICAgcG91ciBmYXZvcmlzZXIgbCdhY2PDqHMgYXV4IHNvaW5zIGF1eCBwZXJzb25uZXMgcXVpIHkgcmVub27Dp2FpZW50IHBvdXIgZGVzIHJhaXNvbnMgZmluYW5jacOocmVzIGV0DQogICAgICAgICAgICAgICAgYXV4IGLDqW7DqWZpY2lhaXJlcyBkZSBsYSBDTVUgKENvdXZlcnR1cmUgTWFsYWRpZSBVbml2ZXJzZWxsZSkgZXQgZGVzIEFDUyAoQWlkZSBhdSBwYWllbWVudCBk4oCZdW5lIENvbXBsw6ltZW50YWlyZSBkZSBTYW50w6kpLg0KICAgICAgICAgICAgICAgIEVsbGUgY29uY2VybmUgbGVzIHNvaW5zIGV0IHByb3Row6hzZXMgZGVudGFpcmVzLCBsJ2F1ZGlvIHByb3Row6hzZSwgZXQgbCdvcHRpcXVlIChob3JzIGxlbnRpbGxlcyBkZSBjb250YWN0KS4NCiAgICAgICAgICAgIDwvcD4NCiAgICAgICAgPC9kaXY+DQogICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24iPg0KICAgICAgICAgICAgPGgyPlFV4oCZRVNULUNFIFFVRSBMQSBSw4lGT1JNRSAxMDAlIFNBTlTDiSAoVElFUlMgUEFZQU5UKSA/PC9oMj4NCiAgICAgICAgICAgIDxwPlRvdXMgbGVzIGFzc3Vyw6lzIGF5YW50IHVuIGNvbnRyYXQgc2FudMOpIGRpdCByZXNwb25zYWJsZSAoOTUlIGRlcyBjb250cmF0cykgb3UgbGEgQ01VIGV0IGxlcyBBQ1Mgb250LCBkZXB1aXMgbGUgMWVyIGphbnZpZXIgMjAyMCwNCiAgICAgICAgICAgICAgICBhY2PDqHMgw6AgdW4gw6lxdWlwZW1lbnQgb3B0aXF1ZSBjb21wbGV0LCBkw6lmaW5pIHNlbG9uIGRlcyBjcml0w6hyZXMgdHLDqHMgcHLDqWNpcywgcXVpIHNlcmEgcHJpcyBlbiBjaGFyZ2UgaW50w6lncmFsZW1lbnQgcGFyIGxhIFPDqWN1cml0w6kgU29jaWFsZSBldCBsZXVyIGNvbXBsw6ltZW50YWlyZSBzYW50w6kuDQogICAgICAgICAgICAgICAgSWwgbid5IGF1cmEgZG9uYyBwYXMgZGUgcmVzdGUgw6AgY2hhcmdlIMOgIHBheWVyIHBvdXIgY2V0IMOpcXVpcGVtZW50LjwvcD4NCiAgICAgICAgPC9kaXY+DQogICAgICAgIDxkaXYgY2xhc3M9InNlY3Rpb24iPg0KICAgICAgICAgICAgPGgyPjEwMCUgU0FOVMOJIDogQ2UgcXVpIHZhIGNoYW5nZXIgZW4gb3B0aXF1ZT88L2gyPg0KICAgICAgICAgICAgPHA+Q2V0dGUgcsOpZm9ybWUgMTAwJSBTYW50w6kgZGl2aXNlIGxlcyBtb250dXJlcyBldCBsZXMgdmVycmVzIGVuIGRldXggY2F0w6lnb3JpZXMgOiA8L3A+DQogICAgICAgICAgICA8cD4gPGI+IExlcyB2ZXJyZXMgZXQgbW9udHVyZXMgZGUgY2xhc3NlIEEgOjwvYj4gPGJyPiBpbHMgc29udCBpbmNsdXMgZGFucyBsZSBwYW5pZXIgMTAwJSBzYW50w6ksIGF2ZWMgdW4gcmVzdGUgw6AgY2hhcmdlIHrDqXJvLiBWb3VzIG7igJlhdmV6IGRvbmMgcmllbiDDoCByw6lnbGVyLiBWb3RyZSBvcHRpY2llbiB2b3VzIHByb3Bvc2VyYSBhbG9ycyB1bmUgZ2FtbWUgY29tcG9zw6llIGTigJlhdSBtb2lucyAxNyBtb250dXJlcyBhZHVsdGVzIGV0IDEwIG1vbnR1cmVzIGVuZmFudHMgZW4gMiBjb2xvcmlzIGRpZmbDqXJlbnRzLCBhdSBwcml4IG1heGltdW0gZGUgMzDigqwsIGV0IGRlcyB2ZXJyZXMgYWRhcHTDqXMgw6Agdm90cmUgY29ycmVjdGlvbiwgYW1pbmNpcyBzaSBuw6ljZXNzYWlyZSwgYXZlYyB1biB0cmFpdGVtZW50IGFudGktcmF5dXJlIGV0IGFudGktcmVmbGV0PC9wPg0KICAgICAgICAgICAgPHA+IDxiPiBMZXMgdmVycmVzIGV0IG1vbnR1cmVzIGRlIGNsYXNzZSBCIDo8L2I+IDxicj4gaWwgc+KAmWFnaXQgZGVzIMOpcXVpcGVtZW50cyBoYWJpdHVlbGxlbWVudCBwcsOpc2VudHMgZW4gbWFnYXNpbiwgcHJpcyBlbiBjaGFyZ2UgcGFyIHZvdHJlIGNvbXBsw6ltZW50YWlyZSBzYW50w6kgZW4gZm9uY3Rpb24gZGVzIG1vZGFsaXTDqXMgZGUgdm90cmUgY29udHJhdC48L3A+DQogICAgICAgICAgICA8cD4gQXZlYyBsYSByw6lmb3JtZSAxMDAlIFNhbnTDqSB2b3VzIHBvdXJyZXogcmVub3V2ZWxlciB2b3MgbW9udHVyZXMgZXQgdm9zIHZlcnJlcyBzYW5zIHJlc3RlIMOgIGNoYXJnZSwgZXQgY2UgOjwvcD4NCiAgICAgICAgICAgIDxwPiA9PiBtaW5pbXVtIHRvdXMgbGVzIDIgYW5zIHBvdXIgbGVzIGFkdWx0ZXMuIDxicj4NCiAgICAgICAgICAgICAgICA9PiB0b3VzIGxlcyBhbnMgcG91ciBsZXMgZW5mYW50cyAobW9pbnMgZGUgMTYgYW5zKS48L3A+DQogICAgICAgICAgICA8cD4gRGFucyBjZXJ0YWlucyBjYXMsIHZvdXMgYXVyZXogbGEgcG9zc2liaWxpdMOpIGRlIGxlcyByZW5vdXZlbGVyIHBsdXMgdMO0dCA6PC9wPg0KICAgICAgICAgICAgPHA+ID0+IGVuIGNhcyBkZSBkw6lncmFkYXRpb24gZGUgbGEgdnVlIDogc2kgdW4gYW4gYXByw6hzIHZvdHJlIGFjaGF0IHZvdXMgY29uc3RhdGV6IHVuIGNoYW5nZW1lbnQgZGUgdm90cmUgdmlzaW9uLCB2b3RyZSBvcHRpY2llbiBwb3VycmEgdm91cyBwcm9wb3NlciB1biBub3V2ZWwgw6lxdWlwZW1lbnQgcXVpIHNlcmEgcHJpcyBlbiBjaGFyZ2UuIE4naMOpc2l0ZXogcGFzIMOgIGxlIGNvbnN1bHRlci4gPGJyPg0KICAgICAgICAgICAgICAgID0+IGRhbnMgZGVzIHNpdHVhdGlvbnMgbcOpZGljYWxlcyBwYXJ0aWN1bGnDqHJlcyA6IGdsYXVjb21lLCBETUxBLi4uIDogc2FucyBkw6lsYWkuPC9wPg0KICAgICAgICA8L2Rpdj4NCiAgICA8L2Rpdj4NCg0KICAgIDw/cGhwIGluY2x1ZGUgX19ESVJfXyAuICcvLi4vdGVtcGxhdGVzL2Zvb3Rlci5waHAnID8+DQoNCjwvYm9keT4NCg0KPC9odG1sPiI7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TjtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG1ldGFkYXRhIjthOjA6e319";